import selenium
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support import expected_conditions as ec
import openpyxl
import time

def obtainContacts(row):
    activeBook = openpyxl.load_workbook("C:\\Users\\ASUS\\Dropbox\\My PC (LAPTOP-NBF5IENT)\\Downloads\\Contacts Testing.xlsx")
    #directory path of excel sheet
    activeSheet = activeBook.active
    #identify active worksheet
    maxRowCount = activeSheet.max_row + 1
    activeCell = activeSheet.cell(row, column = 1)
    contact_name = activeCell.value

    #for tmx actual //
    # activeCell = activeSheet.cell(row, column = 2)
    # contact_category = activeCell.value
    # contact_name_and_category = str(contact_name) + " " + str(contact_category)
    # print (contact_name_and_category)
    #retrieve contact name from cell
    # return contact_name_and_category, maxRowCount
    #//

    return contact_name, maxRowCount

def messagePrompt():
    para1 = ""
    para2 = ""
    para3 = ""
    para4 = ""
    para5 = ""
    para6 = ""
    para7 = ""
    para8 = ""
    para9 = ""
    para10 = ""
    messageArray = [para1,para2,para3,para4,para5,para6,para7,para8,para9,para10]
    print("Please enter the paragraphs for the message")
    for k in range (0,10,+1):
        messageArray[k] = input()
        print(str(9-k) + " paragraphs left")
    print("Message has been entered")
    print(messageArray)
    return messageArray

def documentPrompt():
    filePath1 = ""
    filePath2 = ""
    filePath3 = ""
    filePath4 = ""
    filePath5 = ""
    documentArray = [filePath1, filePath2, filePath3, filePath4, filePath5]
    print("Please enter file paths for documents to be attached")
    for k in range (0,5,+1):
        documentArray[k] = input()
        print(str(4-k) + " files left")
    print("Files have been entered")
    print(documentArray)
    return documentArray

def documentAttach():
    #open attachment menu
    attach_button_xpath = '//*[@id="main"]/footer/div[1]/div/span[2]/div/div[1]/div[2]/div/div'
    file_search_input_xpath = '//input[@accept="image/*,video/mp4,video/3gpp,video/quicktime"]'
    for x in range(0,5,+1):
        attach_button = WebDriverWait(driver,50).until(lambda driver: driver.find_element(By.XPATH, attach_button_xpath))
        time.sleep(0.5)
        attach_button.click()
        file_search_input = WebDriverWait(driver,50).until(lambda driver: driver.find_element(By.XPATH, value = file_search_input_xpath))
        time.sleep(0.5)
        try:
            file_search_input.send_keys(documentArray[x])
        except:
            print("file path non existent or invalid")
            attach_button = WebDriverWait(driver,50).until(lambda driver: driver.find_element(By.XPATH, attach_button_xpath))
            time.sleep(0.5)
            attach_button.click()
            #close attachment menu
        else:
            print("file" + str(x+1) +" has been attached")
            send_button_xpath = '//*[@id="app"]/div/div/div[2]/div[2]/span/div/span/div/div/div[2]/div/div[2]/div[2]/div/div/span'
            send_button = WebDriverWait(driver,50).until(lambda driver: driver.find_element(By.XPATH, value = send_button_xpath))
            time.sleep(0.5)
            send_button.click()

def Messaging():
    paraCount = 1
    messageCount = 0
    while(1):
        if(messageCount == 0):
            inp_xpath = "/html/body/div[1]/div/div/div[4]/div/footer/div[1]/div/span[2]/div/div[2]/div[1]/div/div[1]/p"
            input_box = driver.find_element(By.XPATH, value = inp_xpath)
            input_box.click()
            message = messageArray[messageCount]            
            input_box.send_keys(message + Keys.CONTROL + Keys.ENTER + Keys.ENTER)
            messageCount = messageCount + 1
            paraCount = paraCount + 2

        if(messageCount >= 1 and messageCount <= 9):
            strCount = str(paraCount)
            inp_xpath = "/html/body/div[1]/div/div/div[4]/div/footer/div[1]/div/span[2]/div/div[2]/div[1]/div/div/p["+ strCount +"]"
            input_box = driver.find_element(By.XPATH, value = inp_xpath)
            input_box.click()
            message = messageArray[messageCount]
            input_box.send_keys(message + Keys.CONTROL + Keys.ENTER + Keys.ENTER)
            messageCount = messageCount + 1
            paraCount = paraCount + 2
            if(messageCount == 9):
                time.sleep(0.5)
                documentAttach()
                time.sleep(0.5)
                break

driver = webdriver.Chrome()
driver.get("https://web.whatsapp.com")
print("Scan QR Code to log in")

runCount = 1
row = 2

messageArray = messagePrompt()
documentArray = documentPrompt()

while(True):
    inp_xpath_search = '//*[@id="side"]/div[1]/div/div/div[2]/div/div[1]'
    input_box_search = WebDriverWait(driver,50).until(lambda driver: driver.find_element(By.XPATH,inp_xpath_search))
    time.sleep(0.5)
    input_box_search.click()
    contact, maxRow = obtainContacts(row)
    if(contact == " "):
        break
    input_box_search.send_keys(contact)
    time.sleep(1)
    selected_contact = driver.find_element(By.XPATH, value = "//span[@title='"+contact+"']")
    selected_contact.click()
    time.sleep(0.5)
    Messaging()
    time.sleep(0.5)

    row = row + 1
    runCount = runCount + 1

